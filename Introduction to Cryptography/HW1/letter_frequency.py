ciphertext = "UMTWQWUASQSQTMWGYMJISDALKGPVPZWDUTRVTWHPGZOAVWOQDIDKLSENUVRPAFBWIGDVZQGZMJMFYGAYJEMKEFPVZXZUVRTSDBTGMXICXGUVEIJQAEQWAVDLGDMKMLTWFKZFQHSMXLDEAXIMSMFIWMLFTPEFPAPILTMHELQZJTSDBZJLTMHSJXLMMLUALASKQSENQWQHJUDTRYANQXZQAAPWQVLRVDMRYDMBTRYFPPGADKFPSFQZRTIPPRWHMCMXUVOQQEMWJYDWHMFSOCMEMJZYLFPPQGGBSSOTMYINQZTXAEIOEEBHOVALHWCFADPQTQZTREKAZYDAESIFQDPVARQYHEKAPPXUVGSDGVEEJUTJTSGATRYNMQSJQKZJXUVHEJQPZYKQAKEFPJCMFSQYKMBBSIJQICSXQDPVQRCYIJMTTQWQBZEFPMDTWOQLPDKESIFQDPVEKPJTGEOPXKGKSEFGXAIJTIYHGRUPDLTIEMLDMBYADMDEKFZZRYYWCEDBZTRUUXWILAXCINQVEQWRZZQVQTTFWDIEIDKAEIHBQYKAZBZXZQAEVWQBKEFPUPXZALTGSXTJOFAKVMFSXPSHXMTWZMBDSXRLELWZHTEUOWFRLUBSMYTBTQWFWRILFWDISMADSGZIDMUMVMXZUATWEKAFFKFQEYLQNZVHUAESDMVOFSXTMAAFPLTZUTZWGBPTGSXNWSMDQDLUMBZXZDWHWZUUDIDRCASFTQDWOAZOSACCTILXGEECQBZXZQASMHNBSIJQQDRGFPTRYECCTJUATRYUVELAEJTJLTMJFMFSYIOUBKEDYWDXSXTXIFUVELWUZOIYDMPDKAUPXAYMZVGFPPVROPPVAEPGIJKVPEJXGELWEIXIXQMWMFSAESOMZOWLTMZGWMVHMLTUPFLTMCIFAETWQACCMFECWEJOQECGRBSIEMVSELFWPWRNMWXWPZZYFPJJAZMZGIKMATRVUIYMKXMDFQOWCEDDMPJKPKZQEQZNIKGZCSMZLDMLIQELZQZDYJRJCMYTBLRVXMQXRFPPWLDMPXKFIVIQACHELQZHEJPJTXKQFEVWYMOSOZBZAFUAELWNIEXWDGKAZQZPXZMBYSTXMXSDQQDASEPPHTKELZWEHLRVOWZPWPJJFJQMKIKLESMUTIQIOTWFVKBZPZAACDAWDMZYLANDMYTBZJDMVOFDAWVELFPPGJAEOWGRELXWDIRERQZDXZQZPF"
letters = [chr(x) for x in range(65, 91)]
counts = [ciphertext.count(chr(x)) for x in range(65, 91)]

# zip() returns an iterator of tuples that should be casted to
# your desired data structure, such as a list, dictionary, etc.
freq = list(zip(letters, counts))

# Sorted() creates a list and accepts any iterables.
# We sort by a key which sorts by the 2nd element of our tuples.
# Sorted() is ascending by default, so we need reverse=True
frequencies = sorted(freq, key=lambda x: x[1], reverse=True)

for pair in frequencies:
    print(pair[0], ":", pair[1])
